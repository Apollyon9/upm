from sys import platform
def winwrite(name,author,path,version,linktogit):
    build-iss = """
    ; Script generated by the Inno Setup Script Wizard.
    ; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

    #define MyAppName "{name}"
    #define MyAppVersion "{version}"
    #define MyAppPublisher "{author}"
    #define MyAppURL "{linktogit}"

    [Setup]
    ; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
    ; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
    AppId={{6D31EB27-F080-48D9-954A-840DEB09255C}
    AppName={#MyAppName}
    AppVersion={#MyAppVersion}
    ;AppVerName={#MyAppName} {#MyAppVersion}
    AppPublisher={#MyAppPublisher}
    AppPublisherURL={#MyAppURL}
    AppSupportURL={#MyAppURL}
    AppUpdatesURL={#MyAppURL}
    DefaultDirName=C:\Windows\System32
    DisableDirPage=yes
    DefaultGroupName={#MyAppName}
    ; Uncomment the following line to run in non administrative install mode (install for current user only.)
    ;PrivilegesRequired=lowest
    OutputBaseFilename=upm_setup
    SetupIconFile={path}upm\upm.ico
    Compression=lzma
    SolidCompression=yes
    WizardStyle=modern

    [Languages]
    Name: "english"; MessagesFile: "compiler:Default.isl"

    [Files]
    Source: "{path}upm\upm.py"; DestDir: "{app}"; Flags: ignoreversion
    Source: "{path}upm\upmcore\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
    Source: "{path}upm\upmguess\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
    Source: "{path}upm\upmindex\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
    Source: "{path}upm\upmresources\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
    ; NOTE: Don't use "Flags: ignoreversion" on any shared system files
    """.format(name=name,version=version,author=author,linktogit=linktogit,path=path)
    return build-iss


def run(command):
    subprocess.check_output(command,shell=True)

if platform == "win32" or platform == "win64":
    print("--> Creating build script...")
    name = input("Name of build? ")
    author = input("Author of build? ")
    path = input("Path to upm project folder? ")
    version = input("Version of build?
    run("touch build.iss")
    with open("build.iss","w") as build-iss:
        build-iss.write(str(winwrite(name,author,path,version,"https://github.com/k0nami/upm")))
    print("--> Created Build Script!\nplease use inno setup to compile build.iss for the installer")
    print("--> Building binary....")
    os.system("python setup.py py2exe")
    print("--> Built binary in dist/")
elif platform == "linux" or platform == "linux2" or platform == "darwin":
    print("--> Installing dependencies...")
    run("sudo pip install nuitka")
    print("--> Building...")
    run("sudo python -m nuitka --follow-imports --include-plugin-directory=core --include-plugin-directory=index --include-plugin-directory=guess --include-plugin-directory=resources upm.py")
